(this["webpackJsonpd24-music"]=this["webpackJsonpd24-music"]||[]).push([[0],{135:function(e,t,n){},136:function(e,t,n){},139:function(e,t,n){},140:function(e,t,n){"use strict";n.r(t);var a=n(1),s=n.n(a),i=n(31),r=n.n(i),o=n(32),c=n(13),h=n(4),l=n(5),j=n(8),d=n(7),b=n(36),p=n(17),x=n(11),u=(n(81),n(0)),m=function(e){Object(j.a)(n,e);var t=Object(d.a)(n);function n(){return Object(h.a)(this,n),t.apply(this,arguments)}return Object(l.a)(n,[{key:"render",value:function(){return Object(u.jsxs)(b.a,{className:"App",children:[Object(u.jsx)(p.a,{className:"row-title",children:Object(u.jsx)("h1",{className:"title",children:"Group Actions on Music"})}),Object(u.jsx)(p.a,{className:"blurb",children:Object(u.jsxs)("p",{children:["This webapp contains tools that explore the group actions of music on the Dihedral group ",Object(u.jsx)(x.InlineMath,{math:"D_{12}"})," discussed in ",Object(u.jsx)("i",{children:"Musical Actions on Dihedral Groups"})," (paper can be found ",Object(u.jsx)("a",{href:"https://arxiv.org/abs/0711.1873",target:"_blank",children:"here"}),"). In particular, the tools allow users to play around with group operations, visualize the group actions, and listen to the musical output."]})}),Object(u.jsxs)(p.a,{className:"blurb",children:[Object(u.jsxs)("p",{children:["For a brief, high level discussion of ",Object(u.jsx)(x.InlineMath,{math:"D_{12}"}),", the Dihedral group of order 24, it is generated by two elements: ",Object(u.jsx)(x.InlineMath,{math:"s"})," and ",Object(u.jsx)(x.InlineMath,{math:"t"})]}),Object(u.jsxs)("ul",{children:[Object(u.jsxs)("li",{children:[" ",Object(u.jsx)(x.InlineMath,{math:"s"})," can be thought of as rotating a vertex of a regular polygon to another vertex. In the case of ",Object(u.jsx)(x.InlineMath,{math:"D_{12}"}),", ",Object(u.jsx)(x.InlineMath,{math:"s"})," has order 12. "]}),Object(u.jsxs)("li",{children:[" ",Object(u.jsx)(x.InlineMath,{math:"t"})," can be thought of as reflecting a regular polygon over an axis. For any Dihedral group, ",Object(u.jsx)(x.InlineMath,{math:"t"})," has order 2. "]}),Object(u.jsxs)("li",{children:[" Note that ",Object(u.jsx)(x.InlineMath,{math:"tst = s^{-1}"}),". Thus, ",Object(u.jsx)(x.InlineMath,{math:"s"})," and ",Object(u.jsx)(x.InlineMath,{math:"t"})," generate any Dihedral group. "]})]})]}),Object(u.jsxs)(p.a,{className:"blurb",children:[Object(u.jsx)("p",{children:"For a brief, high level discussion of Serialism, the music analysis technique used in the paper, notes can be partioned into pitch classes. An octave can be divided into 12 semitone pitch classes. Thus we can operate on notes under modulo 12. For example"}),Object(u.jsxs)("ul",{children:[Object(u.jsx)("li",{children:" The note C corresponds with the number 0, C# corresponds with the number 1, and G corresponds with the number 7."}),Object(u.jsxs)("li",{children:[' If we "add" C# and G together, we get ',Object(u.jsx)(x.InlineMath,{math:"1 + 7 = 8"}),", which corresponds with the note A\u266d. "]}),Object(u.jsxs)("li",{children:[' If we "add" G and G together, we get ',Object(u.jsx)(x.InlineMath,{math:"7 + 7 \\equiv 2 \\pmod{12}"}),", which corresponds with the note D. "]}),Object(u.jsx)("li",{children:" Note that enharmonic notes correspond to the same pitch class, so G# and A\u266d both correspond with the pitch class 8. "}),Object(u.jsx)("li",{children:" Also note that notes that are octaves apart belong to the same pitch class."})]})]}),Object(u.jsxs)(p.a,{className:"blurb",children:[Object(u.jsx)("p",{children:"One last thing to note is that the paper and this webapp focus on consonant triads (i.e. major and minor triads). These triads can be seen as subsets of the pitch classes. For example"}),Object(u.jsxs)("ul",{children:[Object(u.jsx)("li",{children:" The C major triad consists of pitch classes (0, 4, 7) "}),Object(u.jsx)("li",{children:" The C minor triad consists of pitch classes (0, 3, 7) "})]})]}),Object(u.jsxs)(p.a,{className:"blurb",children:[Object(u.jsx)("p",{className:"link-paragraph",children:"Below are links to the pages with the tools I developed for the T/I Group and PLR Group discussed in the paper (also can be navigated to from the navbar on top). Each page contains a description of how the group works and then contains the interactive tool at the bottom."}),Object(u.jsxs)("ul",{children:[Object(u.jsxs)("li",{children:[" ",Object(u.jsx)(o.b,{to:"/ti",className:"nav-link",children:"T/I Group"})]}),Object(u.jsxs)("li",{children:[" ",Object(u.jsx)(o.b,{to:"/plr",className:"nav-link",children:"PLR Group"})," "]})]})]}),Object(u.jsxs)(p.a,{className:"blurb",children:[Object(u.jsxs)("p",{children:[" This webapp was developed using React and react-abc, a javascript library for rendering music using abc music notation (",Object(u.jsx)("a",{href:"https://github.com/fuhton/react-abc",target:"_blank",children:"https://github.com/fuhton/react-abc"}),")."]}),Object(u.jsxs)("p",{children:["Source code can be found ",Object(u.jsx)("a",{href:"https://github.com/michaelli00/d24-music",target:"_blank",children:"here"}),"."]})]})]})}}]),n}(s.a.Component),O=n(59),f=n(74);n(83);var g=function(){return Object(u.jsx)(O.a,{bg:"dark",variant:"dark",expand:"lg",children:Object(u.jsxs)(b.a,{fluid:!0,className:"Header",children:[Object(u.jsx)(O.a.Toggle,{"aria-controls":"basic-navbar-nav"}),Object(u.jsx)(O.a.Collapse,{id:"basic-navbar-nav",children:Object(u.jsxs)(f.a,{className:"me-auto",children:[Object(u.jsx)(o.b,{to:"/",className:"nav-link",children:"Home"}),Object(u.jsx)(o.b,{to:"/ti",className:"nav-link",children:"T/I Group"}),Object(u.jsx)(o.b,{to:"/plr",className:"nav-link",children:"PLR Group"})]})})]})})},w=n(23),v=n(41),y=n(35),I=n(46),_=n(14),M=n(33),N=[0,4,7],T=["C","_D","D","_E","E","F","_G","G","_A","A","_B","B"],k=function(e,t){return(e%t+t)%t},F=function(e){return e.map((function(e){return T[e]})).join("")},C=function(e,t,n){switch(e){case 0:return[.2*t,n/3-195];case 1:return[.2*t+100,n/3-170];case 2:return[.2*t+170,n/3-100];case 3:return[.2*t+195,n/3];case 4:return[.2*t+170,n/3+100];case 5:return[.2*t+100,n/3+170];case 6:return[.2*t,n/3+195];case 7:return[.2*t-100,n/3+170];case 8:return[.2*t-170,n/3+100];case 9:return[.2*t-195,n/3];case 10:return[.2*t-170,n/3-100];case 11:return[.2*t-100,n/3-170]}},G=function(e){Object(j.a)(n,e);var t=Object(d.a)(n);function n(){return Object(h.a)(this,n),t.apply(this,arguments)}return Object(l.a)(n,[{key:"render",value:function(){var e=this.props,t=e.windowWidth,n=e.windowHeight,a=function(e,t,n){var a=C(e[0],t,n),s=C(e[1],t,n),i=C(e[2],t,n);return[].concat(Object(M.a)(a),Object(M.a)(s),Object(M.a)(i),Object(M.a)(a))}(e.triad,t,n);return Object(u.jsx)(_.e,{width:800,height:600,children:Object(u.jsxs)(_.b,{children:[Object(u.jsx)(_.d,{x:.2*t,y:n/3,sides:12,radius:200,stroke:"black",strokeWidth:2}),Object(u.jsx)(_.a,{x:.2*t-5,y:n/3-230,children:Object(u.jsx)(_.f,{text:"C",fontSize:20})}),Object(u.jsx)(_.a,{x:.2*t+95,y:n/3-200,children:Object(u.jsx)(_.f,{text:"C#/D\u266d",fontSize:20})}),Object(u.jsx)(_.a,{x:.2*t+175,y:n/3-130,children:Object(u.jsx)(_.f,{text:"D",fontSize:20})}),Object(u.jsx)(_.a,{x:.2*t+210,y:n/3-10,children:Object(u.jsx)(_.f,{text:"D#/E\u266d",fontSize:20})}),Object(u.jsx)(_.a,{x:.2*t+175,y:n/3+110,children:Object(u.jsx)(_.f,{text:"E",fontSize:20})}),Object(u.jsx)(_.a,{x:.2*t+100,y:n/3+185,children:Object(u.jsx)(_.f,{text:"F",fontSize:20})}),Object(u.jsx)(_.a,{x:.2*t-5,y:n/3+210,children:Object(u.jsx)(_.f,{text:"F#/G\u266d",fontSize:20})}),Object(u.jsx)(_.a,{x:.2*t-110,y:n/3+185,children:Object(u.jsx)(_.f,{text:"G",fontSize:20})}),Object(u.jsx)(_.a,{x:.2*t-220,y:n/3+110,children:Object(u.jsx)(_.f,{text:"G#/A\u266d",fontSize:20})}),Object(u.jsx)(_.a,{x:.2*t-235,y:n/3-10,children:Object(u.jsx)(_.f,{text:"A",fontSize:20})}),Object(u.jsx)(_.a,{x:.2*t-225,y:n/3-125,children:Object(u.jsx)(_.f,{text:"A#/B\u266d",fontSize:20})}),Object(u.jsx)(_.a,{x:.2*t-130,y:n/3-200,children:Object(u.jsx)(_.f,{text:"B",fontSize:20})}),Object(u.jsx)(_.c,{points:a,strokeWidth:3,stroke:"red"})]})})}}]),n}(s.a.Component),L=(n(135),function(e){Object(j.a)(n,e);var t=Object(d.a)(n);function n(){var e;return Object(h.a)(this,n),(e=t.call(this)).componentDidMount=function(){window.addEventListener("resize",e.handleResize)},e.componentWillUnmount=function(){window.removeEventListener("resize",e.handleResize)},e.handleResize=function(){e.setState({windowWidth:window.innerWidth,windowHeight:window.innerHeight})},e.handleTranspose=function(){var t=e.state,n=t.triad,a=t.transposition,s=k(parseInt(a),12),i=n.map((function(e){return(e+s)%12}));e.setState({triad:i})},e.handleInversion=function(){var t=e.state,n=t.triad,a=t.inversion,s=k(parseInt(a),12),i=n.map((function(e){return k(-1*e+s,12)}));e.setState({triad:i})},e.state={windowWidth:window.innerWidth,windowHeight:window.innerHeight,triad:N,transposition:0,inversion:0},e}return Object(l.a)(n,[{key:"render",value:function(){var e=this,t=this.state,n=t.triad,a=t.transposition,s=t.inversion,i=t.windowWidth,r=t.windowHeight,o="L:1\n[".concat(F(n),"]");return Object(u.jsxs)(b.a,{className:"TIGroup",children:[Object(u.jsx)(p.a,{className:"row-title",children:Object(u.jsx)("h1",{className:"title",children:"Transposition/Inversion Group"})}),Object(u.jsxs)(p.a,{className:"blurb",children:[Object(u.jsx)("p",{children:"Under music serialism, we can move pitch class sets using two types of operations: transposition and inversion"}),Object(u.jsxs)("ul",{children:[Object(u.jsxs)("li",{children:[" Transpositions move pitch classes up and down.",Object(u.jsxs)("ul",{children:[Object(u.jsxs)("li",{children:["Here the operation can be thought of as ",Object(u.jsx)(x.InlineMath,{math:"T_n: Z_{12} \\rightarrow Z_{12}"})," where ",Object(u.jsx)(x.InlineMath,{math:"T_n(x) = x + n \\pmod{12}"}),"."]}),Object(u.jsxs)("li",{children:[" In terms of music, this means we add n to the pitch class. For example ",Object(u.jsx)(x.InlineMath,{math:"T_4(0) = 4"})," corresponds to transposing the note C to the note E."]}),Object(u.jsxs)("li",{children:[" When working with triads and pitch class sets, transposition is applied to each pitch class in the pitch class set. For example, ",Object(u.jsx)(x.InlineMath,{math:"T_4(0, 4, 7) = (4, 8, 11)"})," corresponds to transposing a C major chord to an E major chord. Important thing to note is that transposition is closed under consonant chords."]}),Object(u.jsxs)("li",{children:[" Under ",Object(u.jsx)(x.InlineMath,{math:"D_{24}"}),", the operation ",Object(u.jsx)(x.InlineMath,{math:"T_n"})," can be thought of as rotating a 12-gon by 30\xb0."]})]})]}),Object(u.jsxs)("li",{children:[" Inversions reflect pitch classes over a fixed axis.",Object(u.jsxs)("ul",{children:[Object(u.jsx)("li",{children:" For people unfamiliar with serial analysis, an important distinction here is that serial inversion is NOT the same as chord inversions. The paper and this webapp focus on serial inversions. "}),Object(u.jsxs)("li",{children:["Here the operation can be thought of as ",Object(u.jsx)(x.InlineMath,{math:"I_n: Z_{12} \\rightarrow Z_{12}"})," where ",Object(u.jsx)(x.InlineMath,{math:"I_n(x) = -x + n \\pmod{12}"}),"."]}),Object(u.jsxs)("li",{children:[" In terms of music, this means we add n to the pitch class' inverse. For example ",Object(u.jsx)(x.InlineMath,{math:"I_6(2) = 4"})," corresponds to transforming the note D to the note E."]}),Object(u.jsxs)("li",{children:[" When working with triads and pitch class sets, inversion is applied to each pitch class in the pitch class set. For example, ",Object(u.jsx)(x.InlineMath,{math:"I_0(0, 4, 7) = (0, 8, 5)"})," corresponds to transforming a C major chord into a F minor chord. Important thing to note is that inversion is closed under consonant chords."]}),Object(u.jsxs)("li",{children:[" Under ",Object(u.jsx)(x.InlineMath,{math:"D_{24}"}),", the operation ",Object(u.jsx)(x.InlineMath,{math:"I_n"})," can be thought of as reflecting over a particular axis. For example, ",Object(u.jsx)(x.InlineMath,{math:"I_0"})," can be thought of reflecting over the vertical axis."]})]})]})]}),Object(u.jsxs)("p",{children:["For completeness, note that ",Object(u.jsx)(x.InlineMath,{math:"T_1"})," generates all possible ",Object(u.jsx)(x.InlineMath,{math:"T_n"})," (and has order 12) and that ",Object(u.jsx)(x.InlineMath,{math:"T_n I_0 = I_n"}),". Thus ",Object(u.jsx)(x.InlineMath,{math:"T_1"})," can be thought of as ",Object(u.jsx)(x.InlineMath,{math:"s"})," and ",Object(u.jsx)(x.InlineMath,{math:"I_0"})," can be thought of as ",Object(u.jsx)(x.InlineMath,{math:"t"}),", so they generate ",Object(u.jsx)(x.InlineMath,{math:"D_{12}"})]})]}),Object(u.jsx)(p.a,{className:"blurb",children:"Below is a visualization of the Transposition/Inversion Group. The tool starts off with a C major chord but allows the user to apply serial transposition and inversion to the chord, after they click the corresponding button, to yield another consonant chord. The operation will update the 12-gon diagram, showing the subset of pitch classes the operation yielded, and will display the corresponding musical chord. Finally, the user can play back the chord audio."}),Object(u.jsxs)(p.a,{className:"blurb",children:[Object(u.jsxs)("p",{children:[Object(u.jsx)("b",{children:"IMPLEMENTATION NOTES"}),": chord presentation is not entirely correct. Although it is enharmonically equivalent (and will sound the same), the notation is not always correct. For example, a D major chord consists of pitches D, F#, A. However, here it is represented by the pitches D, G\u266d, A. For code simplicity, we restrict to only using flat notation. This is a known bug and will be fixed later."]}),Object(u.jsx)("p",{children:"Furthermore, although sanization for transposition and inversion input has been implemented, both still accept integers that would normally be outside of the scope of serial analysis. For example, 101231231 can be inputed even though in reality we only operate from -11 to 11 for transpositions and inversions. Inputting a large integer doesn't break the app, though it is more difficult to interpret what a transposition by 101231231 is rather than transposition by 11."})]}),Object(u.jsxs)(p.a,{className:"input-row",children:[Object(u.jsx)(w.a,{className:"left-col",children:Object(u.jsx)(y.a,{onSubmit:function(e){return e.preventDefault()},children:Object(u.jsxs)(y.a.Group,{className:"mb-3",controlId:"transposeNumber",children:[Object(u.jsx)(y.a.Label,{className:"form-label",children:"Transpose by"}),Object(u.jsxs)("span",{className:"form-row",children:[Object(u.jsx)(y.a.Control,{type:"number",value:a,onChange:function(t){return e.setState({transposition:t.target.value})}}),Object(u.jsx)(v.a,{variant:"primary",type:"button",onClick:this.handleTranspose,className:"pull-right",children:"Transpose"})]})]})})}),Object(u.jsx)(w.a,{className:"right-col",children:Object(u.jsx)(y.a,{onSubmit:function(e){return e.preventDefault()},children:Object(u.jsxs)(y.a.Group,{className:"mb-3",controlId:"inversionNumber",children:[Object(u.jsx)(y.a.Label,{className:"form-label",children:"Invert by"}),Object(u.jsxs)("span",{className:"form-row",children:[Object(u.jsx)(y.a.Control,{type:"number",value:s,onChange:function(t){return e.setState({inversion:t.target.value})}}),Object(u.jsx)(v.a,{variant:"primary",type:"button",onClick:this.handleInversion,children:"Invert"})]})]})})})]}),Object(u.jsxs)(p.a,{children:[Object(u.jsx)(w.a,{children:Object(u.jsx)(G,{windowWidth:i,windowHeight:r,triad:n})}),Object(u.jsxs)(w.a,{className:"notation-col",children:[Object(u.jsx)(I.Notation,{engraverParams:{scale:3},notation:o}),Object(u.jsx)(I.Midi,{notation:o},o)]})]})]})}}]),n}(s.a.Component)),D=(n(136),function(e){Object(j.a)(n,e);var t=Object(d.a)(n);function n(){var e;return Object(h.a)(this,n),(e=t.call(this)).componentDidMount=function(){window.addEventListener("resize",e.handleResize)},e.componentWillUnmount=function(){window.removeEventListener("resize",e.handleResize)},e.handleResize=function(){e.setState({windowWidth:window.innerWidth,windowHeight:window.innerHeight})},e.invertBy=function(e,t){var n=k(parseInt(t),12);return e.map((function(e){return k(-1*e+n,12)}))},e.handleParallelOperation=function(){var t=e.state.triad;e.setState({triad:e.invertBy(t,t[0]+t[2])})},e.handleLeadingToneOperation=function(){var t=e.state.triad;e.setState({triad:e.invertBy(t,t[1]+t[2])})},e.handleRelativeOperation=function(){var t=e.state.triad;e.setState({triad:e.invertBy(t,t[0]+t[1])})},e.state={windowWidth:window.innerWidth,windowHeight:window.innerHeight,triad:N},e}return Object(l.a)(n,[{key:"render",value:function(){var e=this.state,t=e.triad,n=e.windowWidth,a=e.windowHeight,s="L:1\n[".concat(F(t),"]");return Object(u.jsxs)(b.a,{className:"PLRGroup",children:[Object(u.jsx)(p.a,{className:"row-title",children:Object(u.jsx)("h1",{className:"title",children:"Parallel, Leading Tone, Relative Group"})}),Object(u.jsxs)(p.a,{className:"blurb",children:[Object(u.jsxs)("p",{children:["Under music serialism, we can also move pitch class sets using three types of operations: parallel, leading tone, and relative. These operations rely on the inversion operator discussed in the T/I Group. The paper mentions that these operations create ",Object(u.jsx)("i",{children:"contextual inversion"})," since the axis of reflection depends on the input triad."]}),Object(u.jsxs)("ul",{children:[Object(u.jsxs)("li",{children:["Parallel maps a major triad to its parallel minor triad",Object(u.jsxs)("ul",{children:[Object(u.jsxs)("li",{children:["Here the operation can be thought of as ",Object(u.jsx)(x.InlineMath,{math:"P(y_1, y_2, y_3) = I_{y_1 + y_3} (y_1, y_2, y_3)"}),"."]}),Object(u.jsxs)("li",{children:[" In terms of musical serialism, note that the parallel operation ends up swapping the first and third pitch classes from the set. For example ",Object(u.jsx)(x.InlineMath,{math:"P(0, 4, 7) = (7, 3, 0)"})," corresponds to mapping a C major chord to a C minor chord, which is the corresponding parallel minor chord."]}),Object(u.jsxs)("li",{children:[" From the paper, the axis of reflection for the parallel operation is spanned by ",Object(u.jsx)(x.InlineMath,{math:"(\\frac{y_1 + y_3}{2}, \\frac{y_1 + y_3}{2} + 6)"}),". For example, for ",Object(u.jsx)(x.InlineMath,{math:"P(0, 4, 7) = (7, 3, 0)"}),", the axis of reflection is (3.5, 9.5), so the line that goes from inbetween E\u266d and E to inbetween A and B\u266d. "]})]})]}),Object(u.jsxs)("li",{children:["Leading tone maps a major triad to a minor triad by lowering the root by a semitone",Object(u.jsxs)("ul",{children:[Object(u.jsxs)("li",{children:["Here the operation can be thought of as ",Object(u.jsx)(x.InlineMath,{math:"L(y_1, y_2, y_3) = I_{y_2 + y_3} (y_1, y_2, y_3)"}),"."]}),Object(u.jsxs)("li",{children:[" In terms of musical serialism, note that the leading tone operation ends up swapping the second and third pitch classes from the set. For example ",Object(u.jsx)(x.InlineMath,{math:"L(0, 4, 7) = (11, 7, 4)"})," corresponds to mapping a C major chord to an E minor chord."]}),Object(u.jsxs)("li",{children:[" From the paper, the axis of reflection for the parallel operation is spanned by ",Object(u.jsx)(x.InlineMath,{math:"(\\frac{y_2 + y_3}{2}, \\frac{y_2 + y_3}{2} + 6)"}),". For example, for ",Object(u.jsx)(x.InlineMath,{math:"L(0, 4, 7) = (11, 7, 4)"}),", the axis of reflection is (5.5, 11.5), so the line that goes from inbetween F and G\u266d to inbetween B and C. "]})]})]}),Object(u.jsxs)("li",{children:["Relative maps a major triad to its relative minor triad",Object(u.jsxs)("ul",{children:[Object(u.jsxs)("li",{children:["Here the operation can be thought of as ",Object(u.jsx)(x.InlineMath,{math:"R(y_1, y_2, y_3) = I_{y_1 + y_2} (y_1, y_2, y_3)"}),"."]}),Object(u.jsxs)("li",{children:[" In terms of musical serialism, note that the leading tone operation ends up swapping the first and second pitch classes from the set. For example ",Object(u.jsx)(x.InlineMath,{math:"R(0, 4, 7) = (4, 0, 9)"})," corresponds to mapping a C major chord to an E minor chord."]}),Object(u.jsxs)("li",{children:[" From the paper, the axis of reflection for the parallel operation is spanned by ",Object(u.jsx)(x.InlineMath,{math:"(\\frac{y_1 + y_2}{2}, \\frac{y_1 + y_2}{2} + 6)"}),". For example, for ",Object(u.jsx)(x.InlineMath,{math:"R(0, 4, 7) = (4, 0, 9)"}),", the axis of reflection is (2, 8), so the line that goes from D to A\u266d. "]})]})]})]}),Object(u.jsxs)("p",{children:["For completeness, the paper proved that ",Object(u.jsx)(x.InlineMath,{math:"LR"})," (order 12) can be thought of as ",Object(u.jsx)(x.InlineMath,{math:"s"})," and that ",Object(u.jsx)(x.InlineMath,{math:"L"})," (order 2) can be thought of as ",Object(u.jsx)(x.InlineMath,{math:"t"}),". Also note that ",Object(u.jsx)(x.InlineMath,{math:"R(LR)^3 = P"}),". Thus ",Object(u.jsx)(x.InlineMath,{math:"LR"})," and ",Object(u.jsx)(x.InlineMath,{math:"L"})," generate the PLR Group."]})]}),Object(u.jsxs)(p.a,{className:"input-row",children:[Object(u.jsx)(w.a,{className:"left-col",children:Object(u.jsx)(v.a,{variant:"primary",type:"button",onClick:this.handleParallelOperation,className:"pull-right",children:" Parallel "})}),Object(u.jsx)(w.a,{className:"right-col",children:Object(u.jsx)(v.a,{variant:"primary",type:"button",onClick:this.handleLeadingToneOperation,children:" Leading Tone "})}),Object(u.jsx)(w.a,{className:"right-col",children:Object(u.jsx)(v.a,{variant:"primary",type:"button",onClick:this.handleRelativeOperation,children:" Relative "})})]}),Object(u.jsxs)(p.a,{children:[Object(u.jsx)(w.a,{children:Object(u.jsx)(G,{windowWidth:n,windowHeight:a,triad:t})}),Object(u.jsxs)(w.a,{className:"notation-col",children:[Object(u.jsx)(I.Notation,{engraverParams:{scale:3},notation:s}),Object(u.jsx)(I.Midi,{notation:s},s)]})]})]})}}]),n}(s.a.Component));n(137),n(138),n(139);r.a.render(Object(u.jsxs)(o.a,{children:[Object(u.jsx)(g,{}),Object(u.jsxs)(c.c,{children:[Object(u.jsx)(c.a,{path:"/",element:Object(u.jsx)(m,{})}),Object(u.jsx)(c.a,{path:"/ti",element:Object(u.jsx)(L,{})}),Object(u.jsx)(c.a,{path:"/plr",element:Object(u.jsx)(D,{})})]})]}),document.getElementById("root"))},81:function(e,t,n){},83:function(e,t,n){}},[[140,1,2]]]);
//# sourceMappingURL=main.7d63a606.chunk.js.map